"use strict";module.exports=({filter:e},{services:i})=>{e("items.items.update",(async(e,s,{schema:t,accountability:c})=>{const{ItemsService:a}=i,n=new a(s.collection,{schema:t,accountability:c}),l=await n.readOne(s.keys[0],{fields:["*.*.showfields"]}),d=await Object.entries(l).reduce((async(i,[n,l])=>{const d=t.collections[s.collection].fields[n].special;let o=[];if(d.includes("m2m")){let i=[],s=[],d=[],f=[];Object.hasOwn(e,n)&&(f=e[n].delete,s=await e[n].create.reduce((async(e,i)=>{const s=new a(n,{schema:t,accountability:c}),l=await s.readOne(i[`${n}_id`].id,{fields:["*"]});return Object.hasOwn(l,"showfields")&&(d=l.showfields?l.showfields:[]),e.concat(d.filter((i=>e.indexOf(i)<0)))}),[])),l&&(i=l.reduce(((e,i)=>{const s=i[`${n}_id`].showfields&&!f.includes(i.id)?i[`${n}_id`].showfields:[];return e.concat(s.filter((i=>e.indexOf(i)<0)))}),[])),o=s.concat(i.filter((e=>s.indexOf(e)<0)))}else if(d.includes("m2o"))if(Object.hasOwn(e,n)){if(e[n]){const i=new a(n,{schema:t,accountability:c}),s=await i.readOne(e[n],{fields:["*"]});Object.hasOwn(s,"showfields")&&(o=s.showfields?s.showfields:[])}}else l&&(o=l.showfields?l.showfields:[]);const f=await i;return await f.concat(o.filter((e=>f.indexOf(e)<0)))}),[]);return e.visiblefields=d.toString(),e}))};
